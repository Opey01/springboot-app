pipeline {
  agent any
  tools { maven 'Maven3' }

  environment {
    AWS_REGION = "us-east-2"
    ACCOUNT_ID = "850924742604"
    ECR_REPO   = "mydockerrepo"
    REGISTRY   = "${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
  }

  stages {
    stage('Checkout') {
      steps {
        git url: 'https://github.com/Opey01/springboot-app.git', branch: 'main'
      }
    }

    stage('Build JAR') {
      steps {
        sh 'mvn -B -DskipTests clean package'
      }
    }

    stage('Build & Push Image') {
      steps {
        script {
          env.SHA = sh(returnStdout: true, script: "git rev-parse --short=8 HEAD").trim()
          env.TAG = "sha-${SHA}"
          env.IMAGE_URI = "${REGISTRY}/${ECR_REPO}:${TAG}"
        }
        sh '''
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REGISTRY
          docker build -f Dockerfilejenkins -t $IMAGE_URI .
          docker push $IMAGE_URI
        '''
      }
    }

    stage('Helm Deploy to EKS') {
      steps {
        sh '''
          helm upgrade --install springboot ./springboot-chart \
            --namespace default \
            --set image.repository=$REGISTRY/$ECR_REPO \
            --set image.tag=$TAG \
            --atomic --timeout 5m
        '''
      }
    }
  }
}




